{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["BlogIndex","data","location","useState","searchTerm","setSearchTerm","filteredItems","setFilteredItems","loaded","setLoaded","useEffect","urlSearch","window","search","handleChange","split","handleSearch","posts","allMarkdownRemark","edges","e","target","value","trim","startsWith","filter","i","node","frontmatter","category","toLowerCase","includes","replace","title","unBlurAll","document","querySelectorAll","forEach","classList","remove","type","description","className","placeholder","onChange","autoFocus","map","index","fields","slug","categories","key","id","onMouseOver","add","onMouseOut","date","item","onClick","to"],"mappings":"kHAAA,8EAqIeA,UA9HG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAEnB,GAFwC,EAAfC,SAEaC,mBAAS,KAAvCC,EAAR,KAAoBC,EAApB,KACA,EAA4CF,mBAAS,IAA7CG,EAAR,KAAuBC,EAAvB,KACA,EAA4BJ,oBAAS,GAA9BK,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAYC,OAAOV,SAASW,OAClC,IAAIL,GAAUG,EAGZ,OAFAG,EAAaH,EAAUI,MAAM,KAAK,SAClCN,GAAU,GAGZO,IACAP,GAAU,KACT,CAACL,IAGJ,IAAIa,EAAQhB,EAAKiB,kBAAkBC,MAE7BL,EAAe,SAACM,GACpBf,EAAce,EAAEC,OAASD,EAAEC,OAAOC,MAAQF,IAGtCJ,EAAe,WACnB,GAAyB,KAAtBZ,EAAWmB,OAAd,CAIA,IAAIjB,EAAgB,GAElBA,EADCF,EAAWoB,WAAW,KACPP,EAAMQ,QAAO,SAAAC,GAAC,OAC5BA,EAAEC,KAAKC,YAAYC,SAASC,cAAcC,SAAS3B,EAAW4B,QAAQ,IAAK,IAAIF,kBAIjEb,EAAMQ,QAAO,SAAAC,GAAC,OAC5BA,EAAEC,KAAKC,YAAYK,MAAMH,cAAcC,SAAS3B,EAAW0B,gBACxDJ,EAAEC,KAAKC,YAAYC,SAASC,cAAcC,SAAS3B,EAAW0B,kBAGrEvB,EAAiBD,QAffC,EAAiBU,IA8BfiB,EAAY,WACFC,SAASC,iBAAiB,aAClCC,SAAQ,SAAAX,GACZA,EAAEY,UAAUC,OAAO,YAIvB,OACE,kBAAC,IAAD,CACEN,MAAO,OACPO,KAAK,SAEL,kBAAC,IAAD,CACEP,MAAO,OACPQ,YAAa,4DAEf,yBAAKC,UAAU,UACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,aAAd,QACA,yBAAKA,UAAU,aACb,2BACEpB,MAAOlB,EACPuC,YAAY,iCACZC,SAAU9B,EACV+B,WAAS,MAIhBvC,EAAcwC,KAAI,WAAWC,GAAW,IAAnBpB,EAAkB,EAAlBA,KACdM,EAAQN,EAAKC,YAAYK,OAASN,EAAKqB,OAAOC,KAC9CC,EAAavB,EAAKC,YAAYC,SAASd,MAAM,KACnD,OACE,yBACEoC,IAAKJ,EACLL,UAAU,WACVU,GAAE,YAAcL,EAChBM,YAAa,kBAhDCD,EAgDkB,YAAYL,OA/CtCZ,SAASC,iBAAiB,aAClCC,SAAQ,SAAAX,GACT0B,IAAO1B,EAAE0B,GACV1B,EAAEY,UAAUC,OAAO,QAGnBb,EAAEY,UAAUgB,IAAI,WAPC,IAACF,GAiDdG,WAAYrB,GAEZ,yBAAKQ,UAAU,YACb,yBAAKA,UAAS,YACXf,EAAKC,YAAY4B,MAEpB,yBAAKd,UAAU,cAEZQ,EAAWJ,KAAI,SAACW,EAAMV,GACrB,OACE,0BACEI,IAAKJ,EACLL,UAAU,UACVgB,QAAS,kBAAI5C,EAAa,IAAI2C,KAHhC,IAKIA,QAOZ,wBAAIf,UAAU,aAAY,kBAAC,OAAD,CAAMiB,GAAIhC,EAAKqB,OAAOC,MAC7ChB","file":"component---src-pages-blog-js-2e18771f4a4b8827c9af.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport '../styles/blog.scss';\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n\r\n  const [ searchTerm ,setSearchTerm ] = useState('');\r\n  const [ filteredItems, setFilteredItems ] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const urlSearch = window.location.search;\r\n    if(!loaded && urlSearch) {\r\n      handleChange(urlSearch.split(\"=\")[1]);\r\n      setLoaded(true);\r\n      return;\r\n    }\r\n    handleSearch();\r\n    setLoaded(true);\r\n  }, [searchTerm]);\r\n\r\n\r\n  let posts = data.allMarkdownRemark.edges;\r\n\r\n  const handleChange = (e) => {\r\n    setSearchTerm(e.target ? e.target.value : e);\r\n  }\r\n\r\n  const handleSearch = () => {\r\n    if(searchTerm.trim() === '') {\r\n      setFilteredItems(posts);\r\n      return;\r\n    }\r\n    let filteredItems = [];\r\n    if(searchTerm.startsWith(\"#\")) {\r\n      filteredItems = posts.filter(i => (\r\n        i.node.frontmatter.category.toLowerCase().includes(searchTerm.replace(\"#\", \"\").toLowerCase())\r\n      ))\r\n    }\r\n    else {\r\n      filteredItems = posts.filter(i => (\r\n        i.node.frontmatter.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n        || i.node.frontmatter.category.toLowerCase().includes(searchTerm.toLowerCase())\r\n      ))\r\n    }\r\n    setFilteredItems(filteredItems);\r\n  }\r\n\r\n  const blurNonFocused = (id) => {\r\n    const items = document.querySelectorAll(\".blogItem\");\r\n    items.forEach(i => {\r\n      if(id === i.id) {\r\n        i.classList.remove(\"blur\");\r\n      }\r\n      else {\r\n        i.classList.add(\"blur\");\r\n      }\r\n    });\r\n  }\r\n\r\n  const unBlurAll = () => {\r\n    const items = document.querySelectorAll(\".blogItem\");\r\n    items.forEach(i => {\r\n      i.classList.remove(\"blur\");\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Layout\r\n      title={\"Blog\"}\r\n      type=\"clean\"\r\n    >\r\n      <SEO\r\n        title={\"Blog\"}\r\n        description={\"take a look at what drives us, and how we do what we do\"}\r\n      />\r\n      <div className=\"parent\">\r\n        <div className=\"pageHeader\">\r\n          <h1 className=\"pageTitle\">Blog</h1>\r\n          <div className=\"searchBar\">\r\n            <input\r\n              value={searchTerm}\r\n              placeholder=\"SEARCH FOR TITLE, CATEGORY ETC\"\r\n              onChange={handleChange}\r\n              autoFocus\r\n            />\r\n          </div>\r\n        </div>\r\n      {filteredItems.map(({ node }, index) => {\r\n        const title = node.frontmatter.title || node.fields.slug;\r\n        const categories = node.frontmatter.category.split(\",\");\r\n        return (\r\n          <div\r\n            key={index}\r\n            className=\"blogItem\"\r\n            id={`blogItem-${index}`}\r\n            onMouseOver={()=>blurNonFocused(`blogItem-${index}`)}\r\n            onMouseOut={unBlurAll}\r\n          >\r\n            <div className=\"blogMeta\">\r\n              <div className={`blogDate`}>\r\n                {node.frontmatter.date}\r\n              </div>\r\n              <div className=\"categories\">\r\n              {\r\n                (categories.map((item, index) => {\r\n                  return (\r\n                    <span\r\n                      key={index}\r\n                      className=\"hashtag\"\r\n                      onClick={()=>handleChange(`#${item}`)}\r\n                    >\r\n                      #{item}\r\n                    </span>\r\n                  )\r\n                }))\r\n              }\r\n              </div>\r\n            </div>\r\n            <h3 className=\"blogTitle\"><Link to={node.fields.slug}>\r\n              {title}\r\n            </Link></h3>\r\n          </div>\r\n        )\r\n      })}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 40)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMDD, YYYY\")\r\n            title\r\n            category\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}